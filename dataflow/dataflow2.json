{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empdataset",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputdataset1",
						"type": "DatasetReference"
					},
					"name": "itemp"
				},
				{
					"dataset": {
						"referenceName": "outputdataset1",
						"type": "DatasetReference"
					},
					"name": "hrempsplit"
				},
				{
					"dataset": {
						"referenceName": "outputdataset1",
						"type": "DatasetReference"
					},
					"name": "mrktempsink"
				}
			],
			"transformations": [
				{
					"name": "splitondept"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          name as string,",
				"          country as string,",
				"          departmet as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 split(equals(departmet,'1'),",
				"     equals(departmet,'2'),",
				"     equals(departmet,'3'),",
				"     disjoint: false) ~> splitondept@(itemp, hremp1, mrkt)",
				"splitondept@itemp sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['itemp'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> itemp",
				"splitondept@hremp1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['hremp'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> hrempsplit",
				"splitondept@mrkt sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['mrktemp'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> mrktempsink"
			]
		}
	}
}